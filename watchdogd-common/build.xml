<project name="watchdogd-common" default="jar" basedir=".">
	
	<!-- local build properties (will override defaults) -->
	<property file="build.properties"/>
	
	<!-- source directories -->
	<property name="src.dir"                 location="src/java"/>
	<property name="conf.dir"                location="src/conf"/>
	<property name="conf.tomcat.dir"         location="src/conf/tomcat"/>
	<property name="conf.spring.dir"         location="src/conf/spring"/>
	<property name="test.dir"                location="src/test"/>
	<property name="lib.dir"           	     location="lib"/>
	<property name="ext.lib.dir"           	 location="ext"/>
	
	<property name="dist.dir"			     location="${lib.dir}" />
	<property name="jar.name"           	 location="${dist.dir}/${ant.project.name}.jar"/>
	
	<!-- build artifacts directories -->
	<property name="build.dir"               location="build"/>	
	<property name="build.class.dir"         location="${build.dir}/classes"/>
	<property name="build.test.dir"          location="${build.dir}/tests"/>
	
	<path id="build.classpath">
    	<fileset dir="${lib.dir}">
    		<include name="**/*.jar" />
    	</fileset>
    	<fileset dir="${ext.lib.dir}">
    		<include name="**/*.jar" />
    	</fileset>
	</path>

	<!-- initialization and cleanup targets -->
	<target name="init" depends="clean" description="initialize">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${build.class.dir}"/>
		<mkdir dir="${build.test.dir}"/>
		<!--
		<mkdir dir="${build.junit.report.dir}"/>
		<mkdir dir="${build.hibernate.dir}"/>
		<mkdir dir="${build.reports.dir}"/>
		-->
	</target>
	
	<target name="clean" description="clean up">
		<delete dir="${build.dir}"/>
	</target>

	<target name="compile" depends="init">
		<!-- compile source -->
		<javac srcdir="${src.dir}" destdir="${build.class.dir}" debug="true" >
			<classpath refid="build.classpath" />
			<!--
			<compilerarg value="-Xlint" />
			-->
		</javac>
		<copy todir="${build.class.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.*"/>
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	
	<target name="compile-tests" depends="compile">
			<!-- compile source -->
			<javac srcdir="${test.dir}" destdir="${build.test.dir}" debug="true" >
				<classpath refid="build.classpath" />
			</javac>
			<copy todir="${build.test.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*.*"/>
					<exclude name="**/*.java" />
				</fileset>
			</copy>
		</target>
	
	<target name="unit-test" depends="compile-tests">
		<junit haltonfailure="yes" haltonerror="yes" errorProperty="test.failed" failureProperty="test.failed" printsummary="true">
        		<classpath>
            		<path refid="build.classpath" />
        		</classpath>
			
			<formatter type="xml"/>
        			
			<batchtest fork="yes" todir="${build.junit.report.dir}">
			    <fileset dir="${build.test.dir}">
			      <include name="**/*Test.class"/>
			      <exclude name="**/AllTests.java"/>
			    </fileset>
			  </batchtest>
		</junit>
	</target>
	
	<target name="jar" depends="compile">
		<jar destfile="${jar.name}">
			<fileset dir="${build.class.dir}" />
			<fileset dir="${conf.spring.dir}" />
			<fileset dir="${conf.dir}/env/${build.env}" />
			<!--
			<fileset dir="${res.dir}" excludes="**log4j**"/>
			-->
		</jar>
	</target>
	
</project>
